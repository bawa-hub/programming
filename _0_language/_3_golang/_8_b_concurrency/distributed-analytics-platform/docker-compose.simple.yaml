services:
  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: analytics-postgres
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Analytics Server
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: analytics-server
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - CONFIG_FILE=/app/configs/server.yaml
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    volumes:
      - ./configs:/app/configs
      - ./web:/app/web
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Analytics Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - CONFIG_FILE=/app/configs/worker.yaml
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    volumes:
      - ./configs:/app/configs
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: analytics-network
